library(MCMCglmm)
load('~/Projets_Recherches/Celegans/G_matrix_manuscript/EVOLUTION/Shared_files/Cemee_Pop_WI/Analysis_Cemee_Pop_WI_with_gamma.RData')
load('Output_files/RData/Cemee_Pop_WI/Analysis_Cemee_Pop_WI_with_gamma.RData')
getwd()
rm(list = ls())
gc()
library(MCMCglmm)
library(psych)
library(ggplot2)
library(dplyr)
library(gplots)
library(data.table)
library(matrixStats)
library(boot)
library(Rmisc)
library(dae)
library(nlme)
library(parallel)
library(RColorBrewer)
load('Output_files/RData/VCV_A6140.RData')
load('Output_files/RData/VCV_CA50.RData')
load('Output_files/RData/VCV_CA100.RData')
angle_eigenV <- function(x, y) {
dot.prod <- x %*% y
norm.x <- norm(x, type = "2")
norm.y <- norm(y, type = "2")
theta <- acos(dot.prod/(norm.x * norm.y))
as.numeric(theta)
}
VCV_mat <- list()
VCV_mat[[1]] <- VCV_mat_A6140[[1]]
for(i in 1:3) VCV_mat[[i+1]] <-  VCV_mat_CA50[[i]]
for(i in 1:3) VCV_mat[[i+4]] <- VCV_mat_CA100[[i]]
vect_Pops=c("A6140","CA150","CA250","CA350","CA1100","CA2100","CA3100")
####
MCMCtot <- nrow(VCV_mat[[1]]$VCV_Mat)
getwd()
rm(list=ls());gc()
library(MCMCglmm)
#library(psych)
library(ggplot2)
library(dplyr)
#library(gplots)
library(data.table)
library(matrixStats)
library(boot)
#library(corrplot)
library(Rmisc)
library(nlme)
library(parallel)
run_parallel_MCMC <- function(list_param){
i=list_param[[1]]
temp_final=list_param[[2]]
nb_trait=6; vect_P_traits <- c("T12", "T13", "T21", "T23", "T31", "T32")
library(MCMCglmm)
library(dae)
temp_final$pop_label <- sample(temp_final$pop_label)
temp_final$date_str <- sample(temp_final$date_str)
phen.var = diag(nb_trait) * diag(var(subset(temp_final, select = vect_P_traits)))
prior_mod <- list(G = list(G1 = list(V = phen.var/3, n = nb_trait), G2 = list(V = phen.var/3, n = nb_trait)),
R = list(V = phen.var/3, n = nb_trait))
model_MCMC <- MCMCglmm(cbind(c(T12, T13, T21, T23, T31, T32)) ~ (temperature+rel_humidity+logD)^3 + is_2012 + trait - 1, random = ~us(trait):pop_label + us(trait):date_str,
rcov = ~us(trait):units,
family = rep("gaussian", nb_trait), data = temp_final, prior = prior_mod, verbose = FALSE,nitt=150000, burnin=50000)
post_dist = posterior.mode(model_MCMC$VCV)
VCV_mat_temp=list(Population = i, N_measurement = nrow(temp_final), G1_mat = matrix(post_dist[1:nb_trait^2],
nb_trait, nb_trait), G2_mat = matrix(post_dist[(nb_trait^2 + 1):(2 * nb_trait^2)], nb_trait, nb_trait),
R_mat = matrix(post_dist[(2 * nb_trait^2 + 1):(3 * nb_trait^2)], nb_trait, nb_trait), VCV_Mat = model_MCMC$VCV)
return(VCV_mat_temp)
}
load("Output_files/RData/VCV_A6140.RData")
rm(list = ls())
library(data.table)
library(pracma)
library(boot)
final_merged =read.table("data/Final_merged_data_NGM.txt",h=TRUE,sep="\t")
rm(list=ls())
gc()
load('Output_files/RData/VCV_A6140.RData')
load('Output_files/RData/VCV_CA50.RData')
load('Output_files/RData/VCV_CA100.RData')
### Then we should plot them
v_col = c("chartreuse","cadetblue1", "cornflowerblue", "slateblue2", "violetred1","darkorange","firebrick")
pdf(file='plots/G_mat_ALL.pdf',h=8,w=6)
par(mar=c(5,7,4,2))
vect_Var <- c(2:6,9:12,16:18,23,24,30,1,8,15,22,29,36)
vProb <- .95
plot(c(VCV_mat_A6140[[1]]$G1_mat)[vect_Var],c(24:10,6:1),yaxt="n",bty="n",xlim=c(-.25,.50),xlab="Genetic (co-)variances",xaxt="n",type='n',ylab="",cex.lab=1.2)
mtext(side=2,"Phenotypic traits    \n Diagonal                                  Off-diagonal            ",padj=-2,cex=1.2)
lines(c(0,0),c(24.5,8.5))
lines(c(0,0),c(.5,5.5),col="red")
axis(side=1,pos=0)
axis(side=2,at=c(24:10,6:1),labels=c("SF*SB","SF*FS","SF*FB","SF*BS","SF*BF",
"SB*FS","SB*FB","SB*BS","SB*BF","FS*FB",
"FS*BS","FS*BF","FB*BS","FB*BF","BS*BF",
"SF","SB","FS","FB","BS","BF"),las=1)
i=1
temp_95 <- HPDinterval(VCV_mat_A6140[[i]]$VCV_Mat[,1:36],prob=.95)
temp_80 <- HPDinterval(VCV_mat_A6140[[i]]$VCV_Mat[,1:36],prob=.8)
arrows(temp_95[vect_Var,1],c(24:10,6:1)+(.25*(i-1)),temp_95[vect_Var,2],c(24:10,6:1)+(.25*(i-1)),code=3,length=.02,angle=90)
arrows(temp_80[vect_Var,1],c(24:10,6:1)+(.25*(i-1)),
temp_80[vect_Var,2],c(24:10,6:1)+(.25*(i-1)),code=3,length=0,angle=90,lwd=2,col="chartreuse")
points(c(VCV_mat_A6140[[i]]$G1_mat)[vect_Var],c(24:10,6:1)+(.25*(i-1)),pch=21,bg="black",cex=.6)
for(i in 1:3){
temp_95 <- HPDinterval(VCV_mat_CA50[[i]]$VCV_Mat[,1:36],prob=.95)
temp_80 <- HPDinterval(VCV_mat_CA50[[i]]$VCV_Mat[,1:36],prob=.8)
arrows(temp_95[vect_Var,1],c(24:10,6:1)+.2+(.05*(i-1)),temp_95[vect_Var,2],c(24:10,6:1)+.2+(.05*(i-1)),code=3,length=.02,angle=90)
arrows(temp_80[vect_Var,1],c(24:10,6:1)+.2+(.05*(i-1)),
temp_80[vect_Var,2],c(24:10,6:1)+.2+(.05*(i-1)),code=3,length=0,angle=90,lwd=2,col=v_col[i+1])
temp_95 <- HPDinterval(VCV_mat_CA100[[i]]$VCV_Mat[,1:36],prob=.95)
temp_80 <- HPDinterval(VCV_mat_CA100[[i]]$VCV_Mat[,1:36],prob=.8)
arrows(temp_95[vect_Var,1],c(24:10,6:1)+.5+(.05*(i-1)),temp_95[vect_Var,2],c(24:10,6:1)+.5+(.05*(i-1)),code=3,length=.02,angle=90)
arrows(temp_80[vect_Var,1],c(24:10,6:1)+.5+(.05*(i-1)),
temp_80[vect_Var,2],c(24:10,6:1)+.5+(.05*(i-1)),code=3,length=0,angle=90,lwd=2,col=v_col[i+4])
points(c(VCV_mat_CA50[[i]]$G1_mat)[vect_Var],c(24:10,6:1)+.2+(.05*(i-1)),pch=21,bg="black",cex=.6)
points(c(VCV_mat_CA100[[i]]$G1_mat)[vect_Var],c(24:10,6:1)+.5+(.05*(i-1)),pch=21,bg="black",cex=.6)
}
legend(.1,23,c("A6140","CA150","CA250","CA350","CA1100","CA2100","CA3100"),ncol=2,v_col,bty="n")
dev.off()
#### Then traces
VCV_mat <- list()
VCV_mat[[1]] <- VCV_mat_A6140[[1]]
for(i in 1:3) VCV_mat[[i+1]] <-  VCV_mat_CA50[[i]]
for(i in 1:3) VCV_mat[[i+4]] <- VCV_mat_CA100[[i]]
k=1;i=1
all_traces <- array(,c(nrow(VCV_mat[[1]]$VCV_Mat),7))
dim(all_traces)
for(i in 1:nrow(VCV_mat[[1]]$VCV_Mat)){
for(k in 1:length(VCV_mat)){
all_traces[i,k] <-  sum(diag(matrix(VCV_mat[[k]]$VCV_Mat[i,1:36],6,6)/2))
}}
pdf(file="plots/Traces.pdf")
plot(1:7,colMeans(all_traces),ylim=c(0,.8),bty="n",las=1,xaxt="n",ylab="G-matrices trace",xlab="")
axis(side=1,at=1:7,c("A6140","CA150","CA250","CA350","CA1100","CA2100","CA3100"),las=2)
int_95 <- apply(all_traces,2,function(x){
HPDinterval(as.mcmc(x))
})
int_80 <- apply(all_traces,2,function(x){
HPDinterval(as.mcmc(x),prob=.8)
})
arrows(1:7,int_95[1,],1:7,int_95[2,],code=3,length=.05,angle=90)
arrows(1:7, int_80[1,],1:7, int_80[2,],code=3,length=0,angle=90,lwd=2,col="orange")
points(1:7,colMeans(all_traces),pch=16)
dev.off()
##
A6_eigens <- eigen(VCV_mat[[1]]$G1_mat)$vectors
#diag(t(eigen(VCV_mat[[1]]$G1_mat)$vectors)%*%VCV_mat[[1]]$G1_mat%*% A6_eigens)
all_coVar_eigen <- array(,c(nrow(VCV_mat[[1]]$VCV_Mat),7,6))
all_Var_eigen <- array(,c(nrow(VCV_mat[[1]]$VCV_Mat),7,6))
for(i in 1:nrow(VCV_mat[[1]]$VCV_Mat)){
for(k in 1:length(VCV_mat)){
all_Var_eigen[i,k,] <-  diag(t(eigen(VCV_mat[[1]]$G1_mat)$vectors)%*%(matrix(VCV_mat[[k]]$VCV_Mat[i,1:36],6,6)/2)%*% A6_eigens)
all_coVar_eigen[i,k,] <-
colSums(abs(t(eigen(VCV_mat[[1]]$G1_mat)$vectors)%*%(matrix(VCV_mat[[k]]$VCV_Mat[i,1:36],6,6)/2)%*% A6_eigens))
}}
pdf(file="plots/Variance_decomposition_along_EV.pdf")
par(mfrow=c(2,3))
for(j in 1:6){
#plot(1:7,colMeans(all_Var_eigen[,,j]),ylim=c(-.1,.5))
int_95 <- apply(all_Var_eigen[,,j],2,function(x){
HPDinterval(as.mcmc(x))
})
c(min(int_95[1,]),max(int_95[1,]))
plot(1:7,colMeans(all_Var_eigen[,,j]),ylim=c(min(int_95[1,]),max(int_95[2,])),bty="n",las=1,xaxt="n",ylab="Variance along eigenV",xlab="")
axis(side=1,at=1:7,c("A6140","CA150","CA250","CA350","CA1100","CA2100","CA3100"),las=2)
int_80 <- apply(all_Var_eigen[,,j],2,function(x){
HPDinterval(as.mcmc(x),prob=.8)
})
arrows(1:7,int_95[1,],1:7,int_95[2,],code=3,length=.05,angle=90)
arrows(1:7, int_80[1,],1:7, int_80[2,],code=3,length=0,angle=90,lwd=2,col="orange")
points(1:7,colMeans(all_Var_eigen[,,j]),pch=16)
}
dev.off()
rm(list=ls())
gc()
#load libraries
#library(rstan)
library(coda)
library(matrixStats)
library(data.table)
library(lme4)
library(MCMCglmm)
library(ggplot2)
load('Output_files/RData/VCV_A6140.RData')
load('Output_files/RData/VCV_CA50.RData')
load('Output_files/RData/VCV_CA100.RData')
source("~/Documents/GitHub/GmatrixManuscript/Rcode/04a_Gamma_matrix_estimation_all_with_Betas_only_Lisbon.R")
rm(list=ls())
gc()
#load libraries
library(coda)
library(matrixStats)
library(data.table)
library(lme4)
library(MCMCglmm)
library(parallel)
load('Output_files/RData/VCV_A6140.RData')
getwd()
source("~/Documents/GitHub/GmatrixManuscript/Rcode/04a_Gamma_matrix_estimation_all_with_Betas_only_Lisbon.R")
rm(list=ls())
gc()
#load libraries
library(coda)
library(matrixStats)
library(data.table)
library(lme4)
library(MCMCglmm)
library(parallel)
load('Output_files/RData/VCV_A6140.RData')
